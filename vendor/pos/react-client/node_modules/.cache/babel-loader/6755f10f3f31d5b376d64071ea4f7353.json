{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _framerMotion = require(\"framer-motion\");\n\nvar _hooks = require(\"./hooks\");\n\nrequire(\"./animatedCounterStyles.css\");\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n} // Adjusts width of individual narrow digits \n\n\nvar calculateDigitWidth = function calculateDigitWidth(digit) {\n  switch (digit) {\n    case '1':\n      return '50%';\n\n    case '7':\n      return '80%';\n\n    default:\n      return '100%';\n  }\n}; // Creates array of digits to vertically scroll through\n\n\nvar formatForDisplay = function formatForDisplay(number, includeDecimals) {\n  return parseFloat(Math.max(number, 0)).toFixed(includeDecimals ? 2 : 0).split('').reverse();\n}; // Render decimals\n\n\nvar DecimalColumn = function DecimalColumn(_ref) {\n  var fontSize = _ref.fontSize,\n      color = _ref.color;\n  return /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n    style: {\n      fontSize: fontSize,\n      lineHeight: fontSize,\n      color: color\n    }\n  }, \".\");\n}; // Render an individual number\n\n\nvar NumberColumn = /*#__PURE__*/(0, _react.memo)(function (_ref2) {\n  var digit = _ref2.digit,\n      delta = _ref2.delta,\n      fontSize = _ref2.fontSize,\n      color = _ref2.color,\n      incrementColor = _ref2.incrementColor,\n      decrementColor = _ref2.decrementColor;\n\n  var _useState = (0, _react.useState)(0),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      position = _useState2[0],\n      setPosition = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(null),\n      _useState4 = (0, _slicedToArray2[\"default\"])(_useState3, 2),\n      animationClass = _useState4[0],\n      setAnimationClass = _useState4[1];\n\n  var previousDigit = (0, _hooks.usePrevious)(digit);\n  var columnContainer = (0, _react.useRef)(null);\n  var setColumnToNumber = (0, _react.useCallback)(function (number) {\n    setPosition(columnContainer.current.clientHeight * parseInt(number, 10));\n  }, []);\n  (0, _react.useEffect)(function () {\n    return setAnimationClass(previousDigit !== digit ? delta : '');\n  }, [digit, delta]);\n  (0, _react.useEffect)(function () {\n    return setColumnToNumber(digit);\n  }, [digit, setColumnToNumber]);\n  return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"ticker-column-container\",\n    ref: columnContainer,\n    style: {\n      fontSize: fontSize,\n      lineHeight: fontSize,\n      color: color,\n      height: 'auto',\n      '--increment-color': incrementColor,\n      '--decrement-color': decrementColor\n    }\n  }, /*#__PURE__*/_react[\"default\"].createElement(_framerMotion.motion.div, {\n    animate: {\n      x: 0,\n      y: position\n    },\n    className: \"ticker-column \".concat(animationClass),\n    onAnimationComplete: function onAnimationComplete() {\n      return setAnimationClass(\"\");\n    }\n  }, [9, 8, 7, 6, 5, 4, 3, 2, 1, 0].map(function (num) {\n    return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n      key: num,\n      className: \"ticker-digit\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n      style: {\n        fontSize: fontSize,\n        lineHeight: fontSize,\n        color: color,\n        width: calculateDigitWidth(num)\n      }\n    }, num));\n  })), /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n    className: \"number-placeholder\"\n  }, \"0\"));\n}, function (prevProps, nextProps) {\n  return prevProps.digit === nextProps.digit && prevProps.delta === nextProps.delta;\n}); // Main component\n\nvar AnimatedCounter = function AnimatedCounter(_ref3) {\n  var value = _ref3.value,\n      fontSize = _ref3.fontSize,\n      color = _ref3.color,\n      incrementColor = _ref3.incrementColor,\n      decrementColor = _ref3.decrementColor,\n      includeDecimals = _ref3.includeDecimals;\n  var numArray = formatForDisplay(value, includeDecimals);\n  var previousNumber = (0, _hooks.usePrevious)(value);\n  var delta = null;\n  if (value > previousNumber) delta = 'increase';\n  if (value < previousNumber) delta = 'decrease';\n  return /*#__PURE__*/_react[\"default\"].createElement(_framerMotion.motion.div, {\n    layout: true,\n    className: \"ticker-view\"\n  }, numArray.map(function (number, index) {\n    return number === \".\" ? /*#__PURE__*/_react[\"default\"].createElement(DecimalColumn, {\n      key: index,\n      fontSize: fontSize,\n      color: color\n    }) : /*#__PURE__*/_react[\"default\"].createElement(NumberColumn, {\n      key: index,\n      digit: number,\n      delta: delta,\n      fontSize: fontSize,\n      incrementColor: incrementColor,\n      decrementColor: decrementColor,\n      includeDecimals: includeDecimals\n    });\n  }));\n};\n\nvar _default = AnimatedCounter;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}